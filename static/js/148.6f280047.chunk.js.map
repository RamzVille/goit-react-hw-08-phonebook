{"version":3,"file":"static/js/148.6f280047.chunk.js","mappings":"sNACA,EAA4B,+BAA5B,EAAkE,0BAAlE,EAAwG,+BAAxG,EAAmJ,+BAAnJ,EAA8L,+BAA9L,EAA8O,oCAA9O,EAAyR,0B,2DCD5QA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAO,ECGrCC,EAAiB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAM,EAC/CC,EAAc,SAAAL,GAAK,OAAIA,EAAMG,SAASG,KAAM,EAC5CC,EAAkB,SAAAP,GAAK,OAAIA,EAAMG,SAASK,SAAU,EAEpDC,GAAyBC,EAAAA,EAAAA,IAEpC,CAACR,EAAgBH,IAEjB,SAACI,EAAUF,GACT,OAAOE,EAASF,QAAO,SAAAU,GAAO,OAAAA,EAAJC,KACnBC,cAAcC,SAASb,EAAOY,cAAc,GAErD,I,SCNWE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAWe,EAAAA,EAAAA,IAAYhB,GAE7BiB,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BP,EAAIS,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA4BJ,EAAAA,EAAAA,UAAS,IAAGK,GAAAH,EAAAA,EAAAA,GAAAE,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GAsCxB,OACEG,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC1BC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAUG,SA9BZ,SAAAC,IAEnBA,EAAEC,iBAGkB,KAAhBvB,EAAKwB,QAAmC,KAAlBV,EAAOU,UAKTjC,EAASkC,MAC/B,SAAAC,GAAO,OAAIA,EAAQ1B,KAAKC,gBAAkBD,EAAKC,aAAa,IAG5D0B,EAAAA,OAAAA,QAAe,GAADC,OAAI5B,EAAI,iCAAiC,CAAE6B,SAAU,gBAI3DF,EAAAA,OAAAA,QAAe,GAADC,OAAI5B,EAAI,4CAA4C,CAAE6B,SAAU,eAGxFzB,GAAS0B,EAAAA,EAAAA,IAAW,CAAE9B,KAAAA,EAAMc,OAAAA,KAG5BH,EAAQ,IACRI,EAAU,KACZ,EAIwDI,SAAA,EAChDC,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAcC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcC,SAAC,UAC7BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,KAACe,EAAAA,IAAM,CAACd,UAAWC,KACnBF,EAAAA,EAAAA,KAAA,SACEgB,KAAK,OACLhC,KAAK,OAELiC,QAAQ,2HACRC,MAAM,0IACNC,UAAQ,EACRC,MAAOpC,EACPqC,SAnDW,SAAAf,GACvBX,EAAQW,EAAEgB,OAAOF,MACnB,WAsDQhB,EAAAA,EAAAA,MAAA,SAAOH,UAAWC,EAAcC,SAAA,EAC9BH,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAcC,SAAC,YAC7BC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EACjCH,EAAAA,EAAAA,KAACuB,EAAAA,IAAU,CAACtB,UAAWC,KACvBF,EAAAA,EAAAA,KAAA,SACEgB,KAAK,MACLhC,KAAK,SAELiC,QAAQ,iGACRC,MAAM,+FACNC,UAAQ,EACRC,MAAOtB,EACPuB,SAhEa,SAAAf,GACzBP,EAAUO,EAAEgB,OAAOF,MACrB,WAkEQhB,EAAAA,EAAAA,MAAA,UAAQH,UAAWC,EAAec,KAAK,SAAQb,SAAA,EAC5CH,EAAAA,EAAAA,KAACwB,EAAAA,IAAQ,CAAEvB,UAAWC,IAAY,sBAK/C,EC7FA,EAA4B,0BAA5B,EAAuE,+BAAvE,EAA6G,qB,UCKhGuB,EAAS,WACpB,IAAMrC,GAAWC,EAAAA,EAAAA,MACXhB,GAASiB,EAAAA,EAAAA,IAAYnB,GAO3B,OACEiC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,KAAAG,SAAG,2BACCC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAmBC,SAAA,EAC/BH,EAAAA,EAAAA,KAAC0B,EAAAA,IAAQ,CAACzB,UAAWC,KACrBF,EAAAA,EAAAA,KAAA,SACAgB,KAAK,OACLhC,KAAK,SACL2C,YAAY,iBACZP,MAAO/C,EACPgD,SAde,SAAAf,GACzBlB,GAASwC,EAAAA,EAAAA,GAAUtB,EAAEgB,OAAOF,OAC9B,SAiBF,EC7BA,EAA4B,+BAA5B,EAAmE,2BAAnE,EAAuG,4BCAvG,GAAgB,UAAY,mCAAmC,gBAAkB,yCAAyC,aAAe,sCAAsC,UAAY,mCAAmC,WAAa,qC,UCO9NS,EAAkB,SAAH9C,GAA6B,IAAvB+C,EAAe/C,EAAf+C,gBAC1B1C,GAAWC,EAAAA,EAAAA,MAsBjB,OACCe,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAAA,gBAAoBC,SAAA,EAChCH,EAAAA,EAAAA,KAAA,KAAAG,UAAGH,EAAAA,EAAAA,KAAA,UAAAG,SAAS2B,EAAgB9C,KAAK+C,mBACjC/B,EAAAA,EAAAA,KAAA,KAAAG,UAAGH,EAAAA,EAAAA,KAAA,KAAAG,SAAI2B,EAAgBhC,YACrBM,EAAAA,EAAAA,MAAA,UAAQH,UAAWC,EAAAA,UAAe8B,QAvBnB,WACnBC,EAAAA,QAAAA,KACE,iBAAiB,mCAADrB,OACmBkB,EAAgB9C,KAAI,KACvD,MACA,MACA,WAEEI,GAAS8C,EAAAA,EAAAA,IAAcJ,EAAgBK,KACvCxB,EAAAA,OAAAA,QAAe,GAADC,OAAIkB,EAAgB9C,KAAI,+CAA+C,CAAE6B,SAAU,cACnG,IACA,WAEEF,EAAAA,OAAAA,KAAY,qBAAsB,CAAEE,SAAU,cAChD,GAEJ,EAO8DV,SAAA,EACtDH,EAAAA,EAAAA,KAACoC,EAAAA,IAAO,CAACnC,UAAWC,EAAAA,OAAY,eAI1C,E,UCvCA,EAA6B,2BCEhBmC,EAAS,WACpB,OACErC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAeC,UAC7BH,EAAAA,EAAAA,KAACsC,EAAAA,GAAY,CACTC,SAAS,EACXC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,wBACVC,aAAc,CAAC,EACfC,aAAa,MAIrB,ECPeC,EAAc,WAC3B,IAAMC,GAAmBzD,EAAAA,EAAAA,IAAYT,GAC/BH,GAAQY,EAAAA,EAAAA,IAAYb,GACpBG,GAAYU,EAAAA,EAAAA,IAAYX,GAExBS,GAAWC,EAAAA,EAAAA,MAMf,OAJF2D,EAAAA,EAAAA,YAAU,WACR5D,GAAS6D,EAAAA,EAAAA,MACX,GAAG,CAAC7D,KAGAY,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BC,EAAAA,EAAAA,MAAA,MAAIH,UAAWC,EAAUC,SAAA,CAElBvB,IAAcF,IAASsB,EAAAA,EAAAA,KAACqC,EAAM,KAG7BzD,IAAcF,GAAqC,IAA5BqE,EAAiBG,SACxClD,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAWC,SAAC,kDAI1BvB,IACCF,GACDqE,EAAiBG,OAAS,GAC1BH,EAAiBI,KAAI,SAAArB,GAAe,OAClC9B,EAAAA,EAAAA,KAAC6B,EAAe,CAEdC,gBAAiBA,GADZA,EAAgBK,GAErB,QAKpB,EC5CA,EAA4B,gCAA5B,EAA0E,kCCwB1E,EAnBqB,WACnB,OACEnC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BC,EAAAA,EAAAA,MAACgD,EAAAA,GAAc,CAAAjD,SAAA,EACbH,EAAAA,EAAAA,KAACqD,EAAAA,GAAM,CAAAlD,UACLH,EAAAA,EAAAA,KAAA,SAAAG,SAAO,iBAEXH,EAAAA,EAAAA,KAACb,EAAW,KAGZa,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAgBC,SAAC,cAChCH,EAAAA,EAAAA,KAACyB,EAAM,KACLzB,EAAAA,EAAAA,KAAC8C,EAAW,QAKpB,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/filter/filterSelector.js","redux/contacts/contactsSelector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/ContactsPage/ContactsPage.module.css?0a45","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__qpJ1N\",\"form\":\"ContactForm_form__dhl+T\",\"formField\":\"ContactForm_formField__O5fo+\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\",\"inputContainer\":\"ContactForm_inputContainer__X4-A5\",\"icon\":\"ContactForm_icon__wGMYw\"};","export const selectFilter = state => state.filter;","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filterSelector';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  // array of input selectors\n  [selectContacts, selectFilter],\n  // transducer function\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { FaUser, FaPhoneAlt } from 'react-icons/fa'; // Import FontAwesome icons\nimport { IoMdSend } from 'react-icons/io';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { selectContacts } from '../../redux/contacts/contactsSelector';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    // prevent the form refreshing when submitting\n    e.preventDefault();\n\n    // if name and number is empty, it will not submit(return)\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    // if existing contact set an alert, it will not submit(return)\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      Notify.failure(`${name} is already in your contacts!`, { position: 'center-top' });  \n      return;\n   }\n       else {\n              Notify.success(`${name} is successfully added to your contacts!`, { position: 'center-top' });\n        }\n\n    dispatch(addContact({ name, number }));\n\n    // Reset Form Fields upon submitting\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.container}>\n        <form className={css.form} onSubmit={handleSubmit}>\n          <label className={css.formField}>\n            <p className={css.formLabel}>Name</p>\n            <div className={css.inputContainer}>\n              <FaUser className={css.icon} />\n              <input\n                type=\"text\"\n                name=\"name\"\n                // add \\ before - in [' \\-] to make it work (LMS)\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n                required\n                value={name}\n                onChange={handleNameChange}\n              />\n            </div>\n          </label>\n            \n          <label className={css.formField}>\n            <p className={css.formLabel}>Number</p>\n            <div className={css.inputContainer}>\n              <FaPhoneAlt className={css.icon} />\n              <input\n                type=\"tel\"\n                name=\"number\"\n                // add \\ before - in [\\-.\\s] to make it work (LMS)\n                pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                required\n                value={number}\n                onChange={handleNumberChange}\n              />\n            </div>\n          </label>\n          <button className={css.btnSubmit} type=\"submit\">\n             <IoMdSend  className={css.icon} /> Add Contact\n          </button>\n        </form>\n      </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"divFilter\":\"Filter_divFilter__qR4Ka\",\"inputContainer\":\"Filter_inputContainer__aHsIZ\",\"icon\":\"Filter_icon__YUraL\"};","import css from './Filter.module.css';\nimport { FaSearch } from 'react-icons/fa'; // Import FontAwesome icons\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelector';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  //filter name based on the the search keyword\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.divFilter}>\n      <p>Find Contacts by Name</p>\n          <div className={css.inputContainer}>\n              <FaSearch className={css.icon} />\n              <input\n              type=\"text\"\n              name=\"filter\"\n              placeholder=\"Search by name\"\n              value={filter}\n              onChange={handleFilterChange}\n            />\n          </div>\n    </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactList_container__hYHc3\",\"ulBox\":\"ContactList_ulBox__UckoK\",\"pEmpty\":\"ContactList_pEmpty__b4nL5\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactListItem_container__aRRAA\",\"contactListItem\":\"ContactListItem_contactListItem__21QwY\",\"contactAlign\":\"ContactListItem_contactAlign__7RrV9\",\"btnDelete\":\"ContactListItem_btnDelete__RwiG3\",\"confirmBox\":\"ContactListItem_confirmBox__7JEH3\"};","import css from './ContactListItem.module.css';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { Confirm } from 'notiflix/build/notiflix-confirm-aio'; // Import Confirm from Notiflix\nimport { FaTrash } from 'react-icons/fa'; // Import FontAwesome icons\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contactsOperation';;\n\nexport const ContactListItem = ({ filteredContact }) => {\n  const dispatch = useDispatch();\n\n  // handleDelete method\n  const handleDelete = () => {\n    Confirm.show(\n      'Delete Contact',\n      `Are you sure you want to delete ${filteredContact.name}?`,\n      'Yes',\n      'No',\n      () => {\n        // If user clicks 'Yes', proceed with the deletion\n        dispatch(deleteContact(filteredContact.id));\n        Notify.success(`${filteredContact.name} was successfully deleted in your contacts!`, { position: 'center-top' });\n      },\n      () => {\n        // If user clicks 'No', do nothing\n        Notify.info('Deletion canceled.', { position: 'center-top' });\n      }\n    );\n  };\n\n\n  return (\n   <li className={css.contactListItem}>\n      <p><strong>{filteredContact.name.toUpperCase()}</strong></p>\n      <p><i>{filteredContact.number}</i></p>\n        <button className={css.btnDelete} onClick={handleDelete}>\n          <FaTrash className={css.icon} /> Delete\n        </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  filteredContact: PropTypes.object.isRequired,\n};","// extracted by mini-css-extract-plugin\nexport default {\"loaderWrap\":\"Loader_loaderWrap__NiYjU\"};","import { RevolvingDot } from 'react-loader-spinner';\nimport css from './Loader.module.css';\n\nexport const Loader = () => {\n  return (\n    <div className={css.loaderWrap}>\n      <RevolvingDot\n          visible={true}\n        height=\"80\"\n        width=\"80\"\n        color=\"#4fa94d\"\n        ariaLabel=\"revolving-dot-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n      />\n    </div>\n  );\n};\n","import css from './ContactList.module.css';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n// prettier-ignore\nimport { selectFilteredContacts, selectError, selectIsLoading } from '../../redux/contacts/contactsSelector';\nimport { fetchContacts } from '../../redux/contacts/contactsOperation';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { Loader } from 'components/Loader/Loader';\n\n  export const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n    return (  \n      <div className={css.container}>\n        <ul className={css.ulBox} >\n          {/* if loading and not error, show Loader */}\n              {isLoading && !error && <Loader />}\n\n              {/* if not loading, not error and filtered contacts is empty, show warning */}\n              {!isLoading && !error && filteredContacts.length === 0 && (\n                <p className={css.pEmpty}>The Phonebook is empty. Please add a contact</p>\n          )}\n          \n              {/* if not loading, not error and have atleast 1 filtered contact, show ContactListItem */}\n              {!isLoading &&\n                !error &&\n                filteredContacts.length > 0 &&\n                filteredContacts.map(filteredContact => (\n                  <ContactListItem\n                    key={filteredContact.id}\n                    filteredContact={filteredContact}\n                  />\n                ))}\n        </ul>\n      </div>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPage_container__BnqXB\",\"textContact\":\"ContactsPage_textContact__rPGhG\"};","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from './ContactsPage.module.css';\n\nconst ContactsPage = () => {\n  return (\n    <div className={css.container}>\n      <HelmetProvider>\n        <Helmet>\n          <title>Phonebook</title>\n        </Helmet>\n      <ContactForm />\n      \n\n      <h2 className={css.textContact}>Contacts</h2>\n      <Filter />\n        <ContactList />\n      \n      </HelmetProvider>\n    </div>\n  );\n};\n\nexport default ContactsPage;"],"names":["selectFilter","state","filter","selectContacts","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsx","className","css","children","_jsxs","onSubmit","e","preventDefault","trim","find","contact","Notify","concat","position","addContact","FaUser","type","pattern","title","required","value","onChange","target","FaPhoneAlt","IoMdSend","Filter","FaSearch","placeholder","setFilter","ContactListItem","filteredContact","toUpperCase","onClick","Confirm","deleteContact","id","FaTrash","Loader","RevolvingDot","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","ContactList","filteredContacts","useEffect","fetchContacts","length","map","HelmetProvider","Helmet"],"sourceRoot":""}